corMat <- read_csv(topoFile %>% str_replace(".topo", "_finFlagFreq.csv"),
show_col_types = F) %>%
filter(flag == 1) %>% select(states, Avg0) %>% drop_na %>%
mutate(Avg0 = Avg0*10000 %>% round) %>% apply(1, function(x){
s <- x[1] %>% str_remove_all("'")
n <- x[2] %>% as.integer
rep(s, n)
}) %>% unlist %>% lapply(function(x){
str_split(x, "") %>% unlist %>% as.integer
}) %>% reduce(rbind.data.frame) %>% set_names(nodes) %>% cor
corMat <- read_csv(topoFile %>% str_replace(".topo", "_finFlagFreq.csv"),
show_col_types = F)
corMat <- read_csv(topoFile %>% str_replace(".topo", "_finFlagFreq.csv"),
show_col_types = F) %>%
filter(flag == 1) %>% select(states, Avg0) %>% drop_na %>%
mutate(Avg0 = Avg0*10000 %>% round) %>% apply(1, function(x){
s <- x[1] %>% str_remove_all("'")
n <- x[2] %>% as.integer
rep(s, n)
}) %>% unlist
corMat <- read_csv(topoFile %>% str_replace(".topo", "_finFlagFreq.csv"),
show_col_types = F) %>%
filter(flag == 1)
correlationMatBool <- function(topoFile)
{#browser()
# print(topoFile)
nodes <- readLines(topoFile %>% str_replace(".topo", "_nodes.txt"))
corMat <- read_csv(topoFile %>% str_replace(".topo", "_finFlagFreq.csv"),
show_col_types = F) %>%
filter(flag == 1) %>% select(states, Avg0) %>% drop_na %>%
mutate(Avg0 = Avg0*10000 %>% round) %>% apply(1, function(x){
s <- x[1] %>% str_remove_all("'")
n <- x[2] %>% as.integer
rep(s, n)
}) %>% unlist
if (length(corMat) == 0)
return(NA)
corMat <- corMat %>% lapply(function(x){
str_split(x, "") %>% unlist %>% as.integer
}) %>% reduce(rbind.data.frame) %>% set_names(nodes) %>% cor
colnames(corMat) <- colnames(corMat) %>% str_replace_all(regex("\\W+"), "")
rownames(corMat) <- rownames(corMat) %>% str_replace_all(regex("\\W+"), "")
return(corMat)
}
correlationMatBool <- cmpfun(correlationMatBool)
netDir <- paste0(randRaw, "/", net)
wd <- getwd()
setwd(netDir)
topoFiles <- list.files(".", ".topo")
dists <- sapply(topoFiles, function(topoFile)
{
inflFile <- paste0("Influence/", str_replace(topoFile, ".topo", "_fullMat.csv"))
if (!file.exists(inflFile))
return(NA)
inflMat <- read.csv(inflFile, row.names = 1) %>% as.matrix
corMat <- correlationMatBool(topoFile)
inflMat <- inflMat[rownames(corMat), colnames(corMat)]
print(topoFile)
sqrt(sum((inflMat - corMat)^2))/(2*length(corMat))
})
getwd()
df <- data.frame(Network = topoFiles %>% str_remove(".topo"), Dist = dists)
View(df)
topoFile
inflFile <- paste0("Influence/", str_replace(topoFile, ".topo", "_fullMat.csv"))
inflMat <- read.csv(inflFile, row.names = 1) %>% as.matrix
corMat <- correlationMatBool(topoFile)
inflMat <- inflMat[rownames(corMat), colnames(corMat)]
topof <- topoFiles
topoFiles <- topof[1:20]
dists
dists <- sapply(topoFiles, function(topoFile)
{
inflFile <- paste0("Influence/", str_replace(topoFile, ".topo", "_fullMat.csv"))
if (!file.exists(inflFile))
return(NA)
inflMat <- read.csv(inflFile, row.names = 1) %>% as.matrix
corMat <- correlationMatBool(topoFile)
if (is.na(corMat))
return(NA)
inflMat <- inflMat[rownames(corMat), colnames(corMat)]
# print(topoFile)
sqrt(sum((inflMat - corMat)^2))/(2*length(corMat))
})
dists
netDir <- paste0(randRaw, "/", net)
wd <- getwd()
setwd(netDir)
topoFiles <- list.files(".", ".topo")
randCorrel <- function(net)
{
netDir <- paste0(randRaw, "/", net)
wd <- getwd()
setwd(netDir)
topoFiles <- list.files(".", ".topo")
dists <- sapply(topoFiles, function(topoFile)
{
inflFile <- paste0("Influence/", str_replace(topoFile, ".topo", "_fullMat.csv"))
if (!file.exists(inflFile))
return(NA)
inflMat <- read.csv(inflFile, row.names = 1) %>% as.matrix
corMat <- correlationMatBool(topoFile)
if (is.na(corMat))
return(NA)
inflMat <- inflMat[rownames(corMat), colnames(corMat)]
# print(topoFile)
sqrt(sum((inflMat - corMat)^2))/(2*length(corMat))
})
df <- data.frame(Network = topoFiles %>% str_remove(".topo"), Dist = dists)
write.csv(df, paste0(net,"_correlInfl.csv"), row.names = F)
}
randCorrel <- cmpfun(randCorrel)
randCorrel("EMT_RACIPE")
warnings()
getwd()
setwd(edgeDel)
edgeDel
library(tidyverse)
library(compiler)
source("plot_theme.R")
source("utils.R")
library(grid)
options(stringsAsFactors = F)
mainFolder <- "D:/Teams"
cwd <- paste0(mainFolder, "/TeamsPaperFigures")
randcompiled <- paste0(mainFolder, "/Final_Results/Compiled_data")
randRaw <- "D:\\Teams\\Final_Results\\Raw_Data"
WTcoherence <- "D:\\Teams\\Final_Results\\WT_NPerts"
edgeDel <- paste0(mainFolder, "/edge_deletions")
QC <- "D:\\Teams\\Final_Results\\Quantitative_convergence"
RACIPE <- "D:\\Teams\\Final_Results\\RACIPE"
RACIPE_OE <- paste0(RACIPE, "\\OverExpression")
RACIPE_WT <- paste0(RACIPE, "\\WildType")
netList <- c("EMT_RACIPE", "EMT_RACIPE2", "SIL", "SIL2", "melanoma", "SCLC", "EMT_MET_reduced", "drosophila")
EMPNets <- netList[c(1:4, 7)]
Controls <- c(EMPNets, "drosophila")
labelKeys <- c("maxFrust", "minFrust", "meanFrust", "maxNetFrust", "minNetFrust",
"meanNetFrust","maxCoh", "minCoh", "meanCoh", "maxNetCoh", "minNetCoh",
"meanNetCoh", "corFreqFrust", "pFreqFrust", "corFreqCoh", "pFreqCoh",
"corFrustCoh", "pFrustCoh"   )
labelvals <- c("Maximum Frustration", "Minimum Frustration", "Mean Frustration",
"Max Net Frustration", "Min Net Frustration", "Mean Net Frustration",
"Maximum Coherence", "Minimum Coherence", "Mean Coherence",
"Max Net Coherence", "Min Net Coherence", "Mean Net Coherence",
"\u03c1 Frequency-frustration", "pVal Frequency-frustration",
"\u03c1 Frequency-coherence", "pVal Frequency-coherence",
"\u03c1 Coherence-frustration", "pVal Coherence-frustration")
names(labelvals) <- labelKeys
labelshorts <- c("Max Frust", "Min Frust", "Mean Frust",
"Max Net Frust", "Min Net Frust", "Mean Net Frust",
"Max Coh", "Min Coh", "Mean Coh",
"Max Net Coh", "Min Net Coh", "Mean Net Coh",
"\u03c1 Freq-Frust", "pVal Freq-Frust",
"\u03c1 Freq-Coh", "pVal Freq-Coh",
"\u03c1 Coh-Frust", "pVal Coh-Frust")
names(labelshorts) <- labelKeys
netNameKey <- c(EMT_RACIPE = "22N 82E", EMT_RACIPE2 = "26N 100E",
SIL = "18N 33E", SIL2 = "20N 40E", EMT_MET_reduced = "57N 113E")
setwd(edgeDel)
edgeDel
edgeDel <- paste0(mainFolder, "/Final_Results/edge_deletions")
edgeDel
setwd(edgeDel)
df <- read.csv("EMT_RACIPE_GroupMetrics2.csv")
View(df)
setwd("D:/Teams/TeamsPaperFigures")
source("figCore.R")
net
net <- "EMT_RACIPE"
df <- read.csv(paste0(net, "_GroupMetrics2.csv")) %>%
mutate(Gs = (abs(G11) + abs(G12) + abs(G21) + abs(G22))/4) %>%
mutate(Gs = round(Gs,2))
setwd(edgeDel)
df <- read.csv(paste0(net, "_GroupMetrics2.csv")) %>%
mutate(Gs = (abs(G11) + abs(G12) + abs(G21) + abs(G22))/4) %>%
mutate(Gs = round(Gs,2))
ggplot(df, aes(x = Gs, y = JSD))+ geom_point()
df <- read.csv(paste0(net, "_GroupMetrics2.csv")) %>%
mutate(Gs = (abs(G11) + abs(G12) + abs(G21) + abs(G22))/4) %>%
mutate(Gs = round(Gs,2)) %>%
filter(!is.na(Gs), !is.na(JSD))
gsVJSD <- function(net)
{
setwd(edgeDel)
df <- read.csv(paste0(net, "_GroupMetrics2.csv")) %>%
mutate(Gs = (abs(G11) + abs(G12) + abs(G21) + abs(G22))/4) %>%
mutate(Gs = round(Gs,2)) %>%
filter(!is.na(Gs), !is.na(JSD))
corr <- cor.test(df$Gs, df$JSD)
pVal <- ifelse(corr$p.value < 0.05, "*", "")
grob <- grobTree(textGrob(paste0("\u03c1 : ", round(corr$estimate, 2), pVal),
x=0.5,  y=0.9, hjust=0,
gp=gpar(col="black", fontsize=18, fontface="bold")))
ggplot(ssDat, aes(x = Gs, y = JSD)) + geom_point(size = 2) +
# geom_smooth(method = "lm") +
annotation_custom(grob) + theme_Publication() +
labs(x = "Mean Group Strength", y = "JSD")
ggsave(paste0(cwd, "/edgeDeletions/", net, "_freqVfrustScatter.png"), width = 5.5, height = 5)
}
sapply(EMPNets, gsVJSD)
gsVJSD <- function(net)
{
setwd(edgeDel)
df <- read.csv(paste0(net, "_GroupMetrics2.csv")) %>%
mutate(Gs = (abs(G11) + abs(G12) + abs(G21) + abs(G22))/4) %>%
mutate(Gs = round(Gs,2)) %>%
filter(!is.na(Gs), !is.na(JSD))
corr <- cor.test(df$Gs, df$JSD)
pVal <- ifelse(corr$p.value < 0.05, "*", "")
grob <- grobTree(textGrob(paste0("\u03c1 : ", round(corr$estimate, 2), pVal),
x=0.5,  y=0.9, hjust=0,
gp=gpar(col="black", fontsize=18, fontface="bold")))
ggplot(df, aes(x = Gs, y = JSD)) + geom_point(size = 2) +
# geom_smooth(method = "lm") +
annotation_custom(grob) + theme_Publication() +
labs(x = "Mean Group Strength", y = "JSD")
ggsave(paste0(cwd, "/edgeDeletions/", net, "_freqVfrustScatter.png"), width = 5.5, height = 5)
}
sapply(EMPNets, gsVJSD)
gsVJSD <- function(net)
{
setwd(edgeDel)
df <- read.csv(paste0(net, "_GroupMetrics2.csv")) %>%
mutate(Gs = (abs(G11) + abs(G12) + abs(G21) + abs(G22))/4) %>%
mutate(Gs = round(Gs,2)) %>%
filter(!is.na(Gs), !is.na(JSD))
corr <- cor.test(df$Gs, df$JSD)
pVal <- ifelse(corr$p.value < 0.05, "*", "")
grob <- grobTree(textGrob(paste0("\u03c1 : ", round(corr$estimate, 2), pVal),
x=0.5,  y=0.9, hjust=0,
gp=gpar(col="black", fontsize=18, fontface="bold")))
ggplot(df, aes(x = Gs, y = JSD)) + geom_point(size = 2) +
# geom_smooth(method = "lm") +
annotation_custom(grob) + theme_Publication() +
labs(x = "Mean Group Strength", y = "JSD")
ggsave(paste0(cwd, "/edgeDeletions/", net, "_freqVfrustScatter.png"), width = 5.5, height = 5)
print(net)
}
sapply(EMPNets, gsVJSD)
sapply(EMPNets, gsVJSD)
edelPlots <- function(net)
{
setwd(edgeDel)
df <- read.csv(paste0(net, "_GroupMetrics2.csv")) %>%
mutate(Gs = (abs(G11) + abs(G12) + abs(G21) + abs(G22))/4) %>%
mutate(Gs = round(Gs,2)) %>%
filter(!is.na(Gs), !is.na(JSD))
corr <- cor.test(df$Gs, df$JSD)
pVal <- ifelse(corr$p.value < 0.05, "*", "")
grob <- grobTree(textGrob(paste0("\u03c1 : ", round(corr$estimate, 2), pVal),
x=0.5,  y=0.9, hjust=0,
gp=gpar(col="black", fontsize=18, fontface="bold")))
ggplot(df, aes(x = Gs, y = JSD)) + geom_point(size = 2) +
# geom_smooth(method = "lm") +
annotation_custom(grob) + theme_Publication() +
labs(x = "Mean Group Strength", y = "JSD")
ggsave(paste0(cwd, "/edgeDeletions/", net, "_freqVfrustScatter.png"), width = 5.5, height = 5)
print(net)
}
edelPlots("drosophila")
net
setwd(paste0(randRaw, "/", net))
distDat <- read.csv(paste0(net, "_correlInfl.csv"))
groupDat <- read.csv(paste0("../", net, "_rand_groups.csv")) %>%
mutate(Gs = (abs(G11) + abs(G22) + abs(G12) + abs(G21))/4) %>%
select(Net, Gs) %>% set_names(c("Network", "Gs"))
df <- merge(distDat, groupDat, by = "Network", all = T)
View(df)
randCorrelPlot <- function(net)
{
setwd(paste0(randRaw, "/", net))
distDat <- read.csv(paste0(net, "_correlInfl.csv"))
groupDat <- read.csv(paste0("../", net, "_rand_groups.csv")) %>%
mutate(Gs = (abs(G11) + abs(G22) + abs(G12) + abs(G21))/4) %>%
select(Net, Gs) %>% set_names(c("Network", "Gs"))
df <- merge(distDat, groupDat, by = "Network", all = T)
corr <- cor.test(df$Dist, df$Gs)
pVal <- ifelse(corr$p.value < 0.05, "*", "")
grob <- grobTree(textGrob(paste0("\u03c1 : ", round(corr$estimate, 2), pVal),
x=0.5,  y=0.9, hjust=0,
gp=gpar(col="black", fontsize=18, fontface="bold")))
ggplot(df, aes(x = Gs, y = Dist)) + geom_point(size = 2) +
# geom_smooth(method = "lm") +
annotation_custom(grob) + theme_Publication() +
labs(x = "Mean Group Strength", y = "Distance between\nCorrelation and Influence")
ggsave(paste0(cwd,"/", net, "_correlVInfl.png"), width = 5.5, height = 5)
}
sapply(EMPNets, randCorrelPlot)
net <- "EMT_RACIPE"
setwd(paste0(randRaw, "/", net))
distDat <- read.csv(paste0(net, "_correlInfl.csv"))
groupDat <- read.csv(paste0("../", net, "_rand_groups.csv")) %>%
mutate(Gs = (abs(G11) + abs(G22) + abs(G12) + abs(G21))/4) %>%
select(Net, Gs) %>% set_names(c("Network", "Gs"))
df <- merge(distDat, groupDat, by = "Network", all = T)
corr <- cor.test(df$Dist, df$Gs)
randCorrelPlot <- function(net)
{
setwd(paste0(randRaw, "/", net))
distDat <- read.csv(paste0(net, "_correlInfl.csv"))
groupDat <- read.csv(paste0("../", net, "_rand_groups.csv")) %>%
mutate(Gs = (abs(G11) + abs(G22) + abs(G12) + abs(G21))/4) %>%
select(Net, Gs) %>% set_names(c("Network", "Gs"))
df <- merge(distDat, groupDat, by = "Network", all = T)
corr <- cor.test(df$Dist, df$Gs)
pVal <- ifelse(corr$p.value < 0.05, "*", "")
grob <- grobTree(textGrob(paste0("\u03c1 : ", round(corr$estimate, 2), pVal),
x=0.5,  y=0.9, hjust=0,
gp=gpar(col="black", fontsize=18, fontface="bold")))
ggplot(df, aes(x = Gs, y = Dist)) + geom_point(size = 2) +
# geom_smooth(method = "lm") +
annotation_custom(grob) + theme_Publication() +
labs(x = "Mean Group Strength", y = "Distance between\nCorrelation and Influence")
ggsave(paste0(cwd,"/", net, "_correlVInfl.png"), width = 5.5, height = 5)
WT <- which(!str_detect(df$Network, "rand"))
WTdist <- df$Dist[WT]
ggplot(df, aes(x = Dist)) +
geom_histogram(aes(y = ..count../sum(..count..))) +
geom_vline(xintercept = WTdist, size = 1.5, color = "red") +
theme_Publication() + labs(x = "Distance between\nCorrelation and Influence",
y = "Frequency")
ggsave(paste0(cwd, "/", net, "_correlVInfldist.png"))
}
sapply(EMPNets, randCorrelPlot)
randCorrelPlot <- function(net)
{
setwd(paste0(randRaw, "/", net))
distDat <- read.csv(paste0(net, "_correlInfl.csv"))
groupDat <- read.csv(paste0("../", net, "_rand_groups.csv")) %>%
mutate(Gs = (abs(G11) + abs(G22) + abs(G12) + abs(G21))/4) %>%
select(Net, Gs) %>% set_names(c("Network", "Gs"))
df <- merge(distDat, groupDat, by = "Network", all = T)
corr <- cor.test(df$Dist, df$Gs)
pVal <- ifelse(corr$p.value < 0.05, "*", "")
grob <- grobTree(textGrob(paste0("\u03c1 : ", round(corr$estimate, 2), pVal),
x=0.5,  y=0.9, hjust=0,
gp=gpar(col="black", fontsize=18, fontface="bold")))
WT <- which(!str_detect(df$Network, "rand"))
WTdist <- df$Dist[WT]
WTGs <- df$Gs[WT]
ggplot(df, aes(x = Gs, y = Dist)) + geom_point(size = 2) +
# geom_smooth(method = "lm") +
geom_point(aes(x = WTGs, y = WTDist, color = "red"), size = 2) +
annotation_custom(grob) + theme_Publication() +
labs(x = "Mean Group Strength", y = "Distance between\nCorrelation and Influence")
ggsave(paste0(cwd,"/", net, "_correlVInfl.png"), width = 5.5, height = 5)
ggplot(df, aes(x = Dist)) +
geom_histogram(aes(y = ..count../sum(..count..))) +
geom_vline(xintercept = WTdist, size = 1.5, color = "red") +
theme_Publication() + labs(x = "Distance between\nCorrelation and Influence",
y = "Frequency")
ggsave(paste0(cwd, "/", net, "_correlVInfldist.png"))
}
sapply(EMPNets, randCorrelPlot)
randCorrelPlot <- function(net)
{
setwd(paste0(randRaw, "/", net))
distDat <- read.csv(paste0(net, "_correlInfl.csv"))
groupDat <- read.csv(paste0("../", net, "_rand_groups.csv")) %>%
mutate(Gs = (abs(G11) + abs(G22) + abs(G12) + abs(G21))/4) %>%
select(Net, Gs) %>% set_names(c("Network", "Gs"))
df <- merge(distDat, groupDat, by = "Network", all = T)
corr <- cor.test(df$Dist, df$Gs)
pVal <- ifelse(corr$p.value < 0.05, "*", "")
grob <- grobTree(textGrob(paste0("\u03c1 : ", round(corr$estimate, 2), pVal),
x=0.5,  y=0.9, hjust=0,
gp=gpar(col="black", fontsize=18, fontface="bold")))
WT <- which(!str_detect(df$Network, "rand"))
WTdist <- df$Dist[WT]
WTGs <- df$Gs[WT]
ggplot(df, aes(x = Gs, y = Dist)) + geom_point(size = 2) +
# geom_smooth(method = "lm") +
geom_point(aes(x = WTGs, y = WTdist, color = "red"), size = 2) +
annotation_custom(grob) + theme_Publication() +
labs(x = "Mean Group Strength", y = "Distance between\nCorrelation and Influence")
ggsave(paste0(cwd,"/", net, "_correlVInfl.png"), width = 5.5, height = 5)
ggplot(df, aes(x = Dist)) +
geom_histogram(aes(y = ..count../sum(..count..))) +
geom_vline(xintercept = WTdist, size = 1.5, color = "red") +
theme_Publication() + labs(x = "Distance between\nCorrelation and Influence",
y = "Frequency")
ggsave(paste0(cwd, "/", net, "_correlVInfldist.png"))
}
sapply(EMPNets, randCorrelPlot)
randCorrelPlot <- function(net)
{
setwd(paste0(randRaw, "/", net))
distDat <- read.csv(paste0(net, "_correlInfl.csv"))
groupDat <- read.csv(paste0("../", net, "_rand_groups.csv")) %>%
mutate(Gs = (abs(G11) + abs(G22) + abs(G12) + abs(G21))/4) %>%
select(Net, Gs) %>% set_names(c("Network", "Gs"))
df <- merge(distDat, groupDat, by = "Network", all = T)
corr <- cor.test(df$Dist, df$Gs)
pVal <- ifelse(corr$p.value < 0.05, "*", "")
grob <- grobTree(textGrob(paste0("\u03c1 : ", round(corr$estimate, 2), pVal),
x=0.5,  y=0.9, hjust=0,
gp=gpar(col="black", fontsize=18, fontface="bold")))
WT <- which(!str_detect(df$Network, "rand"))
WTdist <- df$Dist[WT]
WTGs <- df$Gs[WT]
ggplot(df, aes(x = Gs, y = Dist)) + geom_point(size = 2) +
# geom_smooth(method = "lm") +
geom_point(aes(x = WTGs, y = WTdist, color = "WT"), size = 2) +
annotation_custom(grob) + theme_Publication() +
labs(x = "Mean Group Strength", y = "Distance between\nCorrelation and Influence")
ggsave(paste0(cwd,"/", net, "_correlVInfl.png"), width = 5.5, height = 5)
ggplot(df, aes(x = Dist)) +
geom_histogram(aes(y = ..count../sum(..count..))) +
geom_vline(xintercept = WTdist, size = 1.5, color = "red") +
theme_Publication() + labs(x = "Distance between\nCorrelation and Influence",
y = "Frequency")
ggsave(paste0(cwd, "/", net, "_correlVInfldist.png"))
}
sapply(EMPNets, randCorrelPlot)
randCorrelPlot <- function(net)
{
setwd(paste0(randRaw, "/", net))
distDat <- read.csv(paste0(net, "_correlInfl.csv"))
groupDat <- read.csv(paste0("../", net, "_rand_groups.csv")) %>%
mutate(Gs = (abs(G11) + abs(G22) + abs(G12) + abs(G21))/4) %>%
select(Net, Gs) %>% set_names(c("Network", "Gs"))
df <- merge(distDat, groupDat, by = "Network", all = T)
corr <- cor.test(df$Dist, df$Gs)
pVal <- ifelse(corr$p.value < 0.05, "*", "")
grob <- grobTree(textGrob(paste0("\u03c1 : ", round(corr$estimate, 2), pVal),
x=0.5,  y=0.9, hjust=0,
gp=gpar(col="black", fontsize=18, fontface="bold")))
WT <- which(!str_detect(df$Network, "rand"))
WTdist <- df$Dist[WT]
WTGs <- df$Gs[WT]
ggplot(df, aes(x = Gs, y = Dist)) + geom_point(size = 2) +
# geom_smooth(method = "lm") +
geom_point(aes(x = WTGs, y = WTdist, color = "WT"), size = 2) +
annotation_custom(grob) + theme_Publication() +
theme(legend.title = element_blank()) +
labs(x = "Mean Group Strength", y = "Distance between\nCorrelation and Influence")
ggsave(paste0(cwd,"/", net, "_correlVInfl.png"), width = 5.5, height = 5)
ggplot(df, aes(x = Dist)) +
geom_histogram(aes(y = ..count../sum(..count..))) +
geom_vline(xintercept = WTdist, size = 1.5, color = "red") +
theme_Publication() + labs(x = "Distance between\nCorrelation and Influence",
y = "Frequency")
ggsave(paste0(cwd, "/", net, "_correlVInfldist.png"))
}
sapply(EMPNets, randCorrelPlot)
randCorrelPlot <- function(net)
{
setwd(paste0(randRaw, "/", net))
distDat <- read.csv(paste0(net, "_correlInfl.csv"))
groupDat <- read.csv(paste0("../", net, "_rand_groups.csv")) %>%
mutate(Gs = (abs(G11) + abs(G22) + abs(G12) + abs(G21))/4) %>%
select(Net, Gs) %>% set_names(c("Network", "Gs"))
df <- merge(distDat, groupDat, by = "Network", all = T)
corr <- cor.test(df$Dist, df$Gs)
pVal <- ifelse(corr$p.value < 0.05, "*", "")
grob <- grobTree(textGrob(paste0("\u03c1 : ", round(corr$estimate, 2), pVal),
x=0.5,  y=0.9, hjust=0,
gp=gpar(col="black", fontsize=18, fontface="bold")))
WT <- which(!str_detect(df$Network, "rand"))
WTdist <- df$Dist[WT]
WTGs <- df$Gs[WT]
ggplot(df, aes(x = Gs, y = Dist)) + geom_point(size = 2) +
# geom_smooth(method = "lm") +
geom_point(aes(x = WTGs, y = WTdist, color = "WT"), size = 2) +
annotation_custom(grob) + theme_Publication() +
theme(legend.title = element_blank(), legend.position = c(0.8,0.8)) +
labs(x = "Mean Group Strength", y = "Distance between\nCorrelation and Influence")
ggsave(paste0(cwd,"/", net, "_correlVInfl.png"), width = 5.5, height = 5)
ggplot(df, aes(x = Dist)) +
geom_histogram(aes(y = ..count../sum(..count..))) +
geom_vline(xintercept = WTdist, size = 1.5, color = "red") +
theme_Publication() + labs(x = "Distance between\nCorrelation and Influence",
y = "Frequency")
ggsave(paste0(cwd, "/", net, "_correlVInfldist.png"))
}
sapply(EMPNets, randCorrelPlot)
randCorrelPlot <- function(net)
{
setwd(paste0(randRaw, "/", net))
distDat <- read.csv(paste0(net, "_correlInfl.csv"))
groupDat <- read.csv(paste0("../", net, "_rand_groups.csv")) %>%
mutate(Gs = (abs(G11) + abs(G22) + abs(G12) + abs(G21))/4) %>%
select(Net, Gs) %>% set_names(c("Network", "Gs"))
df <- merge(distDat, groupDat, by = "Network", all = T)
corr <- cor.test(df$Dist, df$Gs)
pVal <- ifelse(corr$p.value < 0.05, "*", "")
grob <- grobTree(textGrob(paste0("\u03c1 : ", round(corr$estimate, 2), pVal),
x=0.5,  y=0.9, hjust=0,
gp=gpar(col="black", fontsize=18, fontface="bold")))
WT <- which(!str_detect(df$Network, "rand"))
WTdist <- df$Dist[WT]
WTGs <- df$Gs[WT]
ggplot(df, aes(x = Gs, y = Dist)) + geom_point(size = 2) +
# geom_smooth(method = "lm") +
geom_point(aes(x = WTGs, y = WTdist, label = "WT"), size = 2, color = "red") +
annotation_custom(grob) + theme_Publication() +
theme(legend.position = "none") +
labs(x = "Mean Group Strength", y = "Distance between\nCorrelation and Influence")
ggsave(paste0(cwd,"/", net, "_correlVInfl.png"), width = 5.5, height = 5)
ggplot(df, aes(x = Dist)) +
geom_histogram(aes(y = ..count../sum(..count..))) +
geom_vline(xintercept = WTdist, size = 1.5, color = "red") +
theme_Publication() + labs(x = "Distance between\nCorrelation and Influence",
y = "Frequency")
ggsave(paste0(cwd, "/", net, "_correlVInfldist.png"))
}
sapply(EMPNets, randCorrelPlot)
setwd("D:/Github/Projects/Ongoing/Relative_boolean/bm_julia_package")
df <- read.csv("NRF2allNode_coherence.csv")
df$init %>% unique()
df1 <- read.csv("NRF2_finFlagFreq.csv") %>% filter(!is.na(Avg0), flag == 1) %>%
select(states) %>% unlist
